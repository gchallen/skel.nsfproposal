SHELL := /bin/bash

# 10 Jul 2010 : GWA : This watches all .tex files in your directory to decide
#               when to rebuild things. I think that the implications are
#               clear.

TEXFILES = $(shell find . -maxdepth 2 -name "*.tex")

TARGETTEX = $(addsuffix .tex, $(TARGET))
PDF = $(addsuffix .pdf, $(TARGET))
PS = $(addsuffix .ps, $(TARGET))
LOG = $(addsuffix .log, $(TARGET))

# 10 Jul 2010 : GWA : Decide whether to run bibtex by grepping for "\cite"
#               commands.

DOBIBTEX = $(shell if [ -n "`grep '\\cite' $(TEXFILES) /dev/null 2>/dev/null`" ] ; then echo "Yes"; else echo "No"; fi)

# 10 Jul 2010 : GWA : You will probably want to change these targets.
#               For now:
#               Default is draft.
#               Draft builds single spaced, with XXXnotes, and missing
#               references check.
#               Final builds double spaces, without XXXnotes, with
#               missing references check and embedded fonts. Depending on
#               your system the embed magic below may or may not work
#               properly or at all. Give it a go and see what happens.
#         
#               If you want to be even more careful about references you can
#               define "missing-fail" which will halt the build if it finds a
#               missing reference. This works fine at the top level but not
#               so well in single-chapter builds since references between
#               chapters will likely be broken.

all: draft
draft: xxxnote $(PDF) missing
final: noxxxnote $(PDF) missing embed

xxxnote:
	@echo "\\newcommand{\\XXXnote}[1]{\\textcolor{red}{\\bf XXX: #1}}" > .xxxnote-new
	@if [ -n "`diff -N 2>/dev/null .xxxnote .xxxnote-new`" ]; then\
		mv .xxxnote-new .xxxnote; \
		else\
		rm -f .xxxnote-new; \
		fi

noxxxnote:
	@echo "\\newcommand{\\XXXnote}[1]{}" > .xxxnote-new
	@if [ -n "`diff -N 2>/dev/null .xxxnote .xxxnote-new`" ]; then\
		mv .xxxnote-new .xxxnote; \
		else\
		rm -f .xxxnote-new; \
		fi

%.dvi: %.tex

%.pdf: $(TARGETTEX) references.bib references.blg $(TEXFILES) .xxxnote 
	pdflatex $(TARGETTEX)
ifeq ($(DOBIBTEX), Yes)
	bibtex $*
endif
	pdflatex $(TARGETTEX)
	pdflatex $(TARGETTEX)
	pdflatex $(TARGETTEX)

%.blg: %.bib 
	@true
ifeq ($(DOBIBTEX), Yes)
	pdflatex $(TARGETTEX)
	bibtex $(TARGET)
	pdflatex $(TARGETTEX)
endif

refs: $(TARGETTEX) references.tex references.bib references.blg $(TEXFILES)
	@true
ifeq ($(DOBIBTEX), Yes)
	pdflatex $(TARGETTEX)
	bibtex $(TARGET)
	pdflatex references.tex
	pdflatex references.tex
endif
	

$(PS): $(PDF)
	acroread -toPostScript $(PDF)

%.toc: %.tex
	pdflatex $*.tex

.embed.pdf: $(PDF)
	gs -dSAFER -dNOPLATFONTS -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sPAPERSIZE=letter -dCompatibilityLevel=1.4 -dPDFSETTINGS=/printer -dCompatibilityLevel=1.4 -dMaxSubsetPct=100 -dSubsetFonts=true -dEmbedAllFonts=true -sOutputFile=.embed.pdf -f $(PDF)
	@cp .embed.pdf $(PDF)

embed: .embed.pdf

MISSINGREFERENCES = $(strip $(shell grep Ref $(LOG) | awk '{print substr($$4, 2, length($$4) - 2)}'))
MISSINGCITATIONS = $(strip $(shell grep Cit $(LOG) | awk '{print substr($$4, 2, length($$4) - 2)}'))
missing:
	@if [ "$(MISSINGREFERENCES)" != "" ]; then\
		echo "-------------------------------------------------------------";\
		echo "Missing references:";\
		echo "-------------------------------------------------------------";\
		echo $(MISSINGREFERENCES);\
		fi
	@if [ "$(MISSINGCITATIONS)" != "" ]; then\
		echo "-------------------------------------------------------------";\
		echo "Missing citations:";\
		echo "-------------------------------------------------------------";\
		echo $(MISSINGCITATIONS);\
		fi

missing-fail: missing
	@if [ "$(MISSINGREFERENCES)" != "" ]; then false; fi
	@if [ "$(MISSINGCITATIONS)" != "" ]; then false; fi

clean:
	@/bin/rm -f $(PDF) *.dvi *.aux *.ps *~ *.log *.lot *.lof *.toc *.blg *.bbl url.sty *.out *.bak .embed.pdf

# 10 Jul 2010 : GWA : A few little convenience things here. Adjust to your
#               specifications.

pages: $(PDF)
	@pdfinfo $(PDF) 2>/dev/null | grep "Pages" | awk '{print "$(PDF)", $$2;}'

FORCE:

